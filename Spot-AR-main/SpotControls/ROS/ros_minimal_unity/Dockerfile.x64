### Pull the base ROS humble image - https://github.com/osrf/docker_images/blob/3f4fbca923d80f834f3a89b5960bad5582652519/ros/humble/ubuntu/jammy/desktop/Dockerfile
### Then add on Unity-TCP endpoint stuff - https://github.com/Unity-Technologies/Unity-Robotics-Hub/blob/main/tutorials/ros_unity_integration/setup.md#-ros-environment

FROM ros:humble-ros-base

######### Unity-ROS

# ROS_DISTRO set by base image. Install test packages normally found in the Humble Desktop variant (which is not availble for ARM64 so we need to supply them ourself). Have in both Dockerfiles to keep consistent.
RUN apt-get update && apt-get install -y \
      ros-${ROS_DISTRO}-demo-nodes-cpp \
      ros-${ROS_DISTRO}-demo-nodes-py && \
    rm -rf /var/lib/apt/lists/*
# launch ros package
CMD /bin/bash

### Create ROS workspace with colcon. Colcon already installed by base images
RUN mkdir -p /senseable_ws/src
WORKDIR /senseable_ws
RUN git clone https://github.com/ros2/examples src/examples -b humble

# Copy ROS2 packages into workspace
COPY ros2_packages/ /senseable_ws/src

#Check out ROS-TCP-Endpoint, ROS2 version
RUN git clone https://github.com/Unity-Technologies/ROS-TCP-Endpoint /senseable_ws/src/ros_tcp_endpoint -b ROS2v0.7.0

# Reference script with commands to source workspace
COPY spot_ros_entrypoint.sh /

# Change to workspace on sign in
RUN echo "cd /senseable_ws" >> ~/.bashrc

# Source it and build in same bash. Shares env vars between them.
RUN /bin/bash -c "source /opt/ros/humble/setup.bash \ 
#&&    colcon build --symlink-install \
&&    colcon build \
&&    source install/setup.bash"

######### Launch container 

ENTRYPOINT ["/spot_ros_entrypoint.sh"]
CMD /bin/bash