//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.UnityRoboticsDemo
{
    [Serializable]
    public class SpotVelocityMsg : Message
    {
        public const string k_RosMessageName = "unity_robotics_demo_msgs/SpotVelocity";
        public override string RosMessageName => k_RosMessageName;

        //  Type of message ("velocity", "absolute_point", "relative_point")
        public string command_type;
        //  For velocity
        public float v_x;
        public float v_y;
        public float v_rot;
        //  For absolute point
        public float absolute_x;
        public float absolute_y;
        public float absolute_z;
        //  For relative point (relative to Spot-recognized April tag)
        public float offset_x;
        public float offset_y;
        public float april_pos_x;
        public float april_pos_y;
        public float april_rot_x;
        public float april_rot_y;
        public float april_rot_z;
        public float april_rot_w;
        public bool invert_heading;

        public SpotVelocityMsg()
        {
            this.command_type = "";
            this.v_x = 0.0f;
            this.v_y = 0.0f;
            this.v_rot = 0.0f;
            this.absolute_x = 0.0f;
            this.absolute_y = 0.0f;
            this.absolute_z = 0.0f;
            this.offset_x = 0.0f;
            this.offset_y = 0.0f;
            this.april_pos_x = 0.0f;
            this.april_pos_y = 0.0f;
            this.april_rot_x = 0.0f;
            this.april_rot_y = 0.0f;
            this.april_rot_z = 0.0f;
            this.april_rot_w = 0.0f;
            this.invert_heading = false;
        }

        public SpotVelocityMsg(string command_type, float v_x, float v_y, float v_rot, float absolute_x, float absolute_y, float absolute_z, float offset_x, float offset_y, float april_pos_x, float april_pos_y, float april_rot_x, float april_rot_y, float april_rot_z, float april_rot_w, bool invert_heading)
        {
            this.command_type = command_type;
            this.v_x = v_x;
            this.v_y = v_y;
            this.v_rot = v_rot;
            this.absolute_x = absolute_x;
            this.absolute_y = absolute_y;
            this.absolute_z = absolute_z;
            this.offset_x = offset_x;
            this.offset_y = offset_y;
            this.april_pos_x = april_pos_x;
            this.april_pos_y = april_pos_y;
            this.april_rot_x = april_rot_x;
            this.april_rot_y = april_rot_y;
            this.april_rot_z = april_rot_z;
            this.april_rot_w = april_rot_w;
            this.invert_heading = invert_heading;
        }

        public static SpotVelocityMsg Deserialize(MessageDeserializer deserializer) => new SpotVelocityMsg(deserializer);

        private SpotVelocityMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.command_type);
            deserializer.Read(out this.v_x);
            deserializer.Read(out this.v_y);
            deserializer.Read(out this.v_rot);
            deserializer.Read(out this.absolute_x);
            deserializer.Read(out this.absolute_y);
            deserializer.Read(out this.absolute_z);
            deserializer.Read(out this.offset_x);
            deserializer.Read(out this.offset_y);
            deserializer.Read(out this.april_pos_x);
            deserializer.Read(out this.april_pos_y);
            deserializer.Read(out this.april_rot_x);
            deserializer.Read(out this.april_rot_y);
            deserializer.Read(out this.april_rot_z);
            deserializer.Read(out this.april_rot_w);
            deserializer.Read(out this.invert_heading);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.command_type);
            serializer.Write(this.v_x);
            serializer.Write(this.v_y);
            serializer.Write(this.v_rot);
            serializer.Write(this.absolute_x);
            serializer.Write(this.absolute_y);
            serializer.Write(this.absolute_z);
            serializer.Write(this.offset_x);
            serializer.Write(this.offset_y);
            serializer.Write(this.april_pos_x);
            serializer.Write(this.april_pos_y);
            serializer.Write(this.april_rot_x);
            serializer.Write(this.april_rot_y);
            serializer.Write(this.april_rot_z);
            serializer.Write(this.april_rot_w);
            serializer.Write(this.invert_heading);
        }

        public override string ToString()
        {
            return "SpotVelocityMsg: " +
            "\ncommand_type: " + command_type.ToString() +
            "\nv_x: " + v_x.ToString() +
            "\nv_y: " + v_y.ToString() +
            "\nv_rot: " + v_rot.ToString() +
            "\nabsolute_x: " + absolute_x.ToString() +
            "\nabsolute_y: " + absolute_y.ToString() +
            "\nabsolute_z: " + absolute_z.ToString() +
            "\noffset_x: " + offset_x.ToString() +
            "\noffset_y: " + offset_y.ToString() +
            "\napril_pos_x: " + april_pos_x.ToString() +
            "\napril_pos_y: " + april_pos_y.ToString() +
            "\napril_rot_x: " + april_rot_x.ToString() +
            "\napril_rot_y: " + april_rot_y.ToString() +
            "\napril_rot_z: " + april_rot_z.ToString() +
            "\napril_rot_w: " + april_rot_w.ToString() +
            "\ninvert_heading: " + invert_heading.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
