//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.UnityRoboticsDemo
{
    [Serializable]
    public class TransformRecordingServiceInfoResponse : Message
    {
        public const string k_RosMessageName = "unity_robotics_demo_msgs/TransformRecordingServiceInfo";
        public override string RosMessageName => k_RosMessageName;

        public bool able_to_record;
        public bool is_recording;
        public bool succesfully_started_recording;

        public TransformRecordingServiceInfoResponse()
        {
            this.able_to_record = false;
            this.is_recording = false;
            this.succesfully_started_recording = false;
        }

        public TransformRecordingServiceInfoResponse(bool able_to_record, bool is_recording, bool succesfully_started_recording)
        {
            this.able_to_record = able_to_record;
            this.is_recording = is_recording;
            this.succesfully_started_recording = succesfully_started_recording;
        }

        public static TransformRecordingServiceInfoResponse Deserialize(MessageDeserializer deserializer) => new TransformRecordingServiceInfoResponse(deserializer);

        private TransformRecordingServiceInfoResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.able_to_record);
            deserializer.Read(out this.is_recording);
            deserializer.Read(out this.succesfully_started_recording);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.able_to_record);
            serializer.Write(this.is_recording);
            serializer.Write(this.succesfully_started_recording);
        }

        public override string ToString()
        {
            return "TransformRecordingServiceInfoResponse: " +
            "\nable_to_record: " + able_to_record.ToString() +
            "\nis_recording: " + is_recording.ToString() +
            "\nsuccesfully_started_recording: " + succesfully_started_recording.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
